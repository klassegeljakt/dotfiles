{
  // [List] -------------------------------------------------------------------
  "list.height": 20,
  "list.alignColumns": true,
  "list.insertMappings": {
    "<C-c>": "do:exit"
  },
  "list.source.diagnostics.pathFormat": "filename",
  "list.previewSplitRight": true,
  "list.indicator": ">",
  "list.maxPreviewHeight": 20,
  "list.extendedSearchMode": true,
  // [Latex] ------------------------------------------------------------------
  "coc.source.vimtex.enable": true,
  "coc.source.vimtex.filetypes": [
    "tex",
    "plaintex",
    "latex"
  ],
  "coc.source.vimtex.priority": 99,
  // [Markdown]
  //"markdownlint.config": {
  //  "MD009": false,
  //  "MD013": false
  //},
  // [Code Lens] --------------------------------------------------------------
  "codeLens.enable": true,
  "codeLens.separator": "",
  "codeLens.subseparator": " ",
  "codeLens.position": "eol",
  // [Suggest] ----------------------------------------------------------------
  "suggest.enablePreselect": true,
  "suggest.asciiCharactersOnly": false,
  "suggest.removeDuplicateItems": true,
  "suggest.detailField": "abbr",
  "suggest.autoTrigger": "always",
  // "suggest.numberSelect": false,
  "suggest.snippetIndicator": "ðŸ“’",
  "suggest.maxCompleteItemCount": 50,
  "suggest.preferCompleteThanJumpPlaceholder": false,
  "suggest.fixInsertedWord": true,
  "suggest.localityBonus": true,
  "suggest.triggerAfterInsertEnter": true,
  "suggest.timeout": 500,
  "suggest.minTriggerInputLength": 99,
  "suggest.triggerCompletionWait": 50,
  //"suggest.echodocSupport": true,
  "suggest.acceptSuggestionOnCommitCharacter": false,
  "suggest.noselect": false,
  "suggest.completionItemKindLabels": {},
  // [Diagnostic] -------------------------------------------------------------
  "diagnostic.level": "warning",
  "diagnostic.enable": true,
  "diagnostic.displayByAle": false,
  "diagnostic.refreshOnInsertMode": true,
  "diagnostic.infoSign": ">",
  "diagnostic.hintSign": ">",
  "diagnostic.errorSign": ">",
  "diagnostic.enableSign": false,
  "diagnostic.enableHighlightLineNumber": true,
  "diagnostic.virtualText": false,
  "diagnostic.virtualTextLineSeparator": "; ",
  "diagnostic.virtualTextLines": 3,
  "diagnostic.autoRefresh": true,
  "diagnostic.messageDelay": 100,
  // [Notifications] ----------------------------------------------------------
  "notification.timeout": 3000,
  "notification.marginRight": 5,
  "notification.winblend": 0,
  "notification.border": false,
  "notification.highlightGroup": "Normal",
  "notification.disabledProgressSources": [
    "*"
  ],
  // [Signature] --------------------------------------------------------------
  "signature.triggerSignatureWait": 200,
  // [Preferences] ------------------------------------------------------------
  "coc.preferences.floatActions": true,
  "coc.preferences.enableMarkdown": true,
  "coc.preferences.promptInput": true,
  "coc.preferences.bracketEnterImprove": true,
  "coc.preferences.currentFunctionSymbolAutoUpdate": false,
  "snippet.statusText": "SNIP",
  "coc.preferences.formatOnType": true,
  "coc.preferences.jumpCommand": "edit",
  //"coc.preferences.enableFloatHighlight": true,
  "coc.preferences.formatOnSaveFiletypes": [],
  // [Emoji] ------------------------------------------------------------------
  "coc.source.emoji.enable": true,
  "coc.source.emoji.filetypes": [
    "markdown"
  ],
  "coc.source.emoji.triggerCharacters": [
    ";"
  ],
  // [Hover] ------------------------------------------------------------------
  "hover.target": "float",
  "hover.floatConfig": {
    "border": true,
    "shadow": true
  },
  "hover.autoHide": true,
  "hover.previewMaxHeight": 20,
  // [Source] -----------------------------------------------------------------
  "coc.source.file.enable": true,
  "coc.source.buffer.enable": false,
  "coc.source.around.enable": true,
  // [Rust] -------------------------------------------------------------------
  "rust-analyzer.enable": true,
  "rust-analyzer.imports.group.enable": true,
  "rust-analyzer.completion.callable.snippets": "fill_arguments",
  "inlayHint.enable": true,
  "inlayHint.refreshOnInsertMode": true,
  "inlayHint.enableParameter": true,
  "rust-analyzer.lens.run.enable": true,
  "rust-analyzer.lens.implementations.enable": true,
  "rust-analyzer.lens.references.adt.enable": true,
  "rust-analyzer.lens.references.trait.enable": true,
  "rust-analyzer.lens.references.method.enable": true,
  "rust-analyzer.lens.references.enumVariant.enable": true,
  "rust-analyzer.signatureInfo.detail": "full",
  "rust-analyzer.cargo.autoreload": true,
  "rust-analyzer.lens.enable": true,
  "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "always",
  "rust-analyzer.inlayHints.typeHints.enable": true,
  "rust-analyzer.inlayHints.reborrowHints.enable": "always",
  "rust-analyzer.inlayHints.chainingHints.enable": true,
  "rust-analyzer.inlayHints.parameterHints.enable": true,
  "rust-analyzer.inlayHints.bindingModeHints.enable": true,
  "rust-analyzer.inlayHints.closingBraceHints.enable": true,
  "rust-analyzer.inlayHints.closingBraceHints.minLines": 25,
  "rust-analyzer.inlayHints.renderColons": true,
  "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "always",
  "rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames": true,
  //"rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.inlayHints.enable": true,
  "rust-analyzer.completion.postfix.enable": false,
  "rust-analyzer.diagnostics.enable": true,
  "rust-analyzer.diagnostics.disabled": [
    "macro-error"
  ],
  "rust-analyzer.hover.links.enable": true,
  "rust-analyzer.hover.documentation.enable": true,
  "rust-analyzer.imports.granularity.group": "item",
  "rust-analyzer.highlightRelated.exitPoints.enable": true,
  "rust-analyzer.rustfmt.extraArgs": [
    "--config",
    "merge_imports=false"
  ],
  "rust-analyzer.highlightRelated.references.enable": true,
  "rust-analyzer.highlightRelated.breakPoints.enable": true,
  "rust-analyzer.highlightRelated.yieldPoints.enable": true,
  "rust-analyzer.semanticHighlighting.strings.enable": true,
  "rust-analyzer.checkOnSave.allTargets": false,
  "rust-analyzer.checkOnSave.extraArgs": [
    "--tests"
  ],
  "rust-analyzer.imports.prefix": "crate",
  "rust-analyzer.updates.prompt": false,
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.completion.autoimport.enable": false,
  "rust-analyzer.completion.autoself.enable": true,
  "rust-analyzer.inlayHints.maxLength": 100,
  "rust-analyzer.procMacro.attributes.enable": true,
  // [Scala] ------------------------------------------------------------------
  //"metals.javaHome": "/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home",
  //"metals.enable": true,
  //"metals.showInferredType": true,
  //"metals.showImplicitArguments": true,
  //"metals.superMethodLensesEnabled": true,
  // [Python] -----------------------------------------------------------------
  "python.analysis.typeCheckingMode": "off",
  "pyright.completion.snippetSupport": true,
  // [Explorer] ---------------------------------------------------------------
  "explorer.position": "floating",
  "explorer.focus": true,
  "explorer.keyMappings.global": {
    "<cr>": [
      "expandable?",
      "expand",
      "open"
    ],
    "l": "indexPrev:diagnosticError",
    "r": "indexNext:diagnosticError",
    "<C-c>": "esc"
  },
  // [Servers] ----------------------------------------------------------------
  "languageserver": {
    "racket": {
      "command": "racket -l racket-langserver",
      "filetypes": [
        "racket"
      ]
    },
    //"metals": {
    //  "command": "metals-vim",
    //  "rootPatterns": [
    //    "build.sbt"
    //  ],
    //  "filetypes": [
    //    "scala",
    //    "sbt"
    //  ]
    //},
    "ccls": {
      "command": "ccls",
      "filetypes": [
        "c",
        "cpp",
        "objc",
        "objcpp"
      ],
      "rootPatterns": [
        ".ccls",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cache": {
          "directory": "/tmp/ccls"
        }
      }
    },
    //"arc-script": {
    //  "command": "/home/klas/Workspace/arc/arc-script/target/release/arc-script-lsp",
    //  "filetypes": [
    //    "arc-script"
    //  ],
    //  "ignoredRootPaths": [
    //    "~"
    //  ]
    //},
    "mlir": {
      "command": "/home/klas/Workspace/arc/arc-mlir/build/llvm-build/bin/mlir-lsp-server",
      "filetypes": [
        "mlir"
      ],
      "ignoredRootPaths": [
        "~"
      ]
    },
    "tower-lsp": {
      "command": "/home/klas/Workspace/tower-lsp/target/debug/examples/server",
      "filetypes": [
        "tower-lsp"
      ],
      "ignoredRootPaths": [
        "~"
      ]
    },
    "idris2": {
      "command": "/home/klas/.idris2/bin/idris2-lsp",
      "filetypes": [
        "idris2"
      ],
      "ignoredRootPaths": [
        "~"
      ]
    },
    "ocaml": {
      "command": "ocamllsp",
      "filetypes": [
        "ocaml"
      ],
      "ignoredRootPaths": [
        "~"
      ]
    },
    "lua": {
      "command": "/opt/homebrew/bin/lua-language-server",
      "filetypes": [
        "lua"
      ],
      "rootPatterns": [
        ".git/"
      ],
      "settings": {
        "Lua": {
          "workspace": {
            "library": [
              "/opt/homebrew/share/nvim/runtime/lua",
              "/opt/homebrew/share/nvim/runtime/lua/vim"
            ],
            "maxPreload": 2000,
            "preloadFileSize": 1000
          },
          "runtime": {
            "version": "Lua 5.4"
          },
          "diagnostics": {
            "enable": true,
            "globals": [
              "hs",
              "vim",
              "it",
              "describe",
              "before_each",
              "after_each"
            ],
            "disable": [
              "lowercase-global"
            ]
          },
          "completion": {
            "keywordSnippet": "Disable"
          }
        }
      }
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": [
        "--lsp"
      ],
      "rootPatterns": [
        ".stack.yaml",
        ".hie-bios",
        "BUILD.bazel",
        "cabal.config",
        "package.yaml"
      ],
      "filetypes": [
        "hs",
        "lhs",
        "haskell"
      ]
    }
  }
}
