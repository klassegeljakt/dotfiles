# Prefix key
unbind C-b
set -g prefix C-w
bind C-w send-prefix
# Options
set -sg escape-time 0 # helps in faster key repetition
set -g base-index 1
set -g pane-base-index 1
set -g default-terminal "screen-256color"
set -g default-shell "/usr/local/bin/zsh"
set-option -sa terminal-overrides ",xterm*:Tc" # Enable RGB colour if running in xterm(1)
set -g mode-keys vi
# Keybinds
bind T swap-window -t 1
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"
# Vim window switching
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
bind P previous-window
bind & kill-window
bind x kill-pane
# Tmux + Vim = <3
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
bind s if-shell "$is_vim" "send-keys C-w s" "split-window -v -c \"#{pane_current_path}\""
bind v if-shell "$is_vim" "send-keys C-w v" "split-window -h -c \"#{pane_current_path}\""
bind x if-shell "$is_vim" "send-keys C-w x" "kill-pane"
bind x if-shell "$is_vim" "send-keys C-w x" "kill-pane"
bind -n C-v if-shell "$is_vim" "send-keys C-v" "copy-mode"
bind S split-window -v -c "#{pane_current_path}"
bind V split-window -h -c "#{pane_current_path}"
#bind -n å if-shell "$is_vim" "send-keys C-w w" "next-window"
bind -n å select-pane -t :.+
# Copying
unbind [
unbind p
bind p paste-buffer
#bind -n ö copy-mode
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
# Resize panes with <Alt-+> and <Alt-Shift-+>
bind -n ± resize-pane -D
bind -n ¿ resize-pane -U
bind -n — resize-pane -L
bind -n – resize-pane -R

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

bind q choose-tree
# Colors
#set -g pane-active-border-fg "colour254"
#set -g pane-active-border-fg "colour254"
set -g message-command-style bg="colour31",fg="colour231",bg="colour31",fg="colour231"
set -g message-style bg="colour31",fg="colour231",bg="colour31",fg="colour231"
set -g pane-active-border-style fg="colour240",fg="colour240"
set -g pane-border-style fg="colour240",fg="colour240"
set -g status "on"
set -g status-justify "left"
set -g status-left ""
set -g status-left-length "100"
set -g status-left-style "none","none"
set -g status-right-length "100"
set -g status-right-style "none","none"
set -g status-style "none",bg="colour238",bg="colour24"
setw -g window-status-activity-style bg="colour238","none",fg="colour250",bg="colour24","none",fg="colour250"
setw -g window-status-separator ""
setw -g window-status-separator ""
setw -g window-status-style fg="colour250","none",bg="colour238",fg="colour250","none",bg="colour24"
# PaperColor
set -g status-right "#[fg=colour231,bg=colour24,bright](#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)) #[fg=colour67,bg=colour24,bold]#[fg=colour231,bg=colour67] %F  %R #[fg=colour231,bg=colour67,bold]#[fg=colour16,bg=colour231]#(ifconfig en0 | grep 'inet ' | awk '{print $2}')  #(curl icanhazip.com) "
setw -g window-status-format " #[fg=colour67,bg=colour24,bold]#[fg=colour16,bg=colour67,bold]#I:#W#[fg=colour67,bg=colour24,bold]"
setw -g window-status-current-format " #[fg=colour231,bg=colour24]#[fg=colour16,bg=colour231]#I:#W#[fg=colour231,bg=colour24]"

set-option -g status-position top # Status bar at top

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

set-option -g history-limit 10000 # Limit scrollback
